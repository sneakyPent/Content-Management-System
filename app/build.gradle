plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'com.palantir.docker' version '0.34.0'
    id 'java'
}

group = 'com.zn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

docker {
    name "${project.name}"
    dockerfile file('Dockerfile')
    files bootJar.getArchiveFile()
    buildArgs(['JAR_FILE': "${bootJar.getArchiveFileName().get()}"])
}

tasks.docker.dependsOn('build')


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.palantir.gradle.docker:gradle-docker:0.34.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'javax.validation:validation-api'
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation 'org.passay:passay:1.3.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

}

tasks.named('test') {
    useJUnitPlatform()
}
