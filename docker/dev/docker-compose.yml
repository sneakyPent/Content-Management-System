version: "3.9"
services:

  dev:
    image: rwgrim/docker-noop
    depends_on:
      - postgres-db
      - nginx
      - pgadmin
      - react-ui

  postgres-db:
    container_name: appDatabase
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./appdata/postgresql/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}

  app:
    container_name: application
    image: app
    restart: unless-stopped
    depends_on:
      - postgres-db
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - DB_HOST=${POSTGRES_DB_HOST}
      - DB_PORT=${POSTGRES_DB_PORT}
      - DB_NAME=${POSTGRES_DB_NAME}
      - DB_USERNAME=${POSTGRES_DB_USERNAME}
      - DB_PASSWORD=${POSTGRES_DB_PASSWORD}
    ports:
      - "8080:8080"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.16
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - ./appdata/pgadmin:/var/lib/pgadmin

  react-ui:
    container_name: react-ui
    build:
      context: ../../ui
      dockerfile: dev.Dockerfile
    restart: unless-stopped
    volumes:
      - ../../ui:/app/
      - '/app/node_modules'
    ports:
      - "3000:3000"
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true

  nginx:
    container_name: nginx
    image: nginx:1.23.2-alpine
    restart: unless-stopped
    depends_on:
      - react-ui
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/data/www:/data/www
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"